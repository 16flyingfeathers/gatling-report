<!DOCTYPE html>
<head>
{{#scripts}}
  <script src="{{.}}"></script>
{{/scripts}}
  <style media="screen" type="text/css">
    th {text-align:left}
    #responseAllDiv {float: left}
    #countDiv {float: left}
    #responseDiv {clear:both}
  </style>
</head>

<h1>{{simStat.startDate}} - Gatling report for simulation {{simStat.scenario}}</h1>

<div id="summaryDiv">
  <table id="summaryTab">
    <tr><th>Simulation</th><td>{{simStat.scenario}}</td></tr>
    <tr><th>Launched</th><td>{{simStat.startDate}}</td></tr>
    <tr><th>Duration (s)</th><td>{{simStat.duration}}</td></tr>
    <tr><th>Throughput requests/s</th><td>{{simStat.throughput}}</td></tr>
  </table>
</div>

<div id="responseAllDiv"></div>
<div id="countDiv"></div>
<div id="responseDiv"></div>

<script>
var dataCount = [{
  values: [{{simStat.successCount}}, {{simStat.errorCount}}],
  labels: ['Success: {{simStat.successCount}}', 'Error: {{simStat.errorCount}}'],
  type: 'pie',
  marker: {
    //colors: ['rgb(56,75,126)', 'rgb(255,67,67)']
  }
}];
var layoutCount = {
  height: 300,
  width: 400,
  title: 'Requests count',
};
Plotly.newPlot('countDiv', dataCount, layoutCount);

var dataAll = [
  {
    y: {{simStat.durations}},
    name: 'Average: {{simStat.average}}ms',
    boxpoints: 'all',
    jitter: 0.3,
    pointpos: -1.8,
    boxmean: 'sd',
    type: 'box',
    marker:{
      size:2,
      opacity:0.6
    }
  }
];
var layoutAll = {
  height: 500,
  width: 500,
  yaxis: {
    title: 'Time ms',
    type: 'log'
  },
  showlegend: true,
  xaxis: {
      showticklabels: false
  },
  title: 'Response time all requests'
};
Plotly.newPlot('responseAllDiv', dataAll, layoutAll);

var layoutResponse = {
  height: 600,
  width: 1200,
  yaxis: {
    title: 'Time ms',
    type: 'log',
    zeroline: true
  },
  xaxis: {
    showticklabels: false
  },
  title: 'Response time per request',
  showlegend: true,
  legend: {
    traceorder: 'reversed'
  }
};

var dataResponse = [];
{{#requests}}
var data{{indice}} = {
    y: {{durations}},
    boxpoints: 'all',
    jitter: 0.2,
    pointpos: -5,
    fillcolor: 'cls',
    name: '{{request}} ({{average}}ms)',
    boxmean: 'sd',
    type: 'box',
    marker:{
       size: 3,
       opacity:0.7
    }

  };
dataResponse.push(data{{indice}});
{{/requests}}
Plotly.newPlot('responseDiv', dataResponse, layoutResponse);

</script>
